<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>本音十三&#39;s Blog</title>
  
  <subtitle>摸鱼被发现力~</subtitle>
  <link href="https://blog.honne13.com/atom.xml" rel="self"/>
  
  <link href="https://blog.honne13.com/"/>
  <updated>2023-04-19T14:58:07.969Z</updated>
  <id>https://blog.honne13.com/</id>
  
  <author>
    <name>benyinshisan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>交换网络</title>
    <link href="https://blog.honne13.com/posts/46462.html"/>
    <id>https://blog.honne13.com/posts/46462.html</id>
    <published>2023-04-19T14:38:20.000Z</published>
    <updated>2023-04-19T14:58:07.969Z</updated>
    
    <content type="html"><![CDATA[<h2 id="交换网络的基本概念">交换网络的基本概念</h2><p>交换系统的根本就是交换网络<strong>交换</strong>的最基本功能是在任意的入线与出线之间建立连接构成交换网络的最小单位是<strong>交换单元</strong>交换网络由<strong>交换单元</strong>按照一定的<strong>拓扑结构</strong>和<strong>控制方式</strong>决定（第二个三要素</p><figure><img data-src="../imgs/SmartSelect_20230417_183136_Edge.jpg"alt="交换网络图1" /><figcaption aria-hidden="true">交换网络图1</figcaption></figure><h2 id="clos网络">CLOS网络</h2><h3id="交换网络分类单级交换网络和多级交换网络">交换网络分类－－单级交换网络和多级交换网络</h3><p>单级交换网络：交换网络入线到出线只经过一个交换单元，并且同一级多个交换单元构成时，不同交换单元入线与出线之间可建立连接</p><p>多级交换网络： 1. 所有入线都只与第一次级交换单元链接 2.所有第一级交换单元都只与入线第二季级交换单元链接 3. 依次类推</p><h3 id="内部阻塞">内部阻塞</h3><p>多级交换才会出现内部阻塞</p><h4 id="多级交换相比于单级交换">多级交换相比于单级交换</h4><p><strong>缺点</strong>：</p><ol type="1"><li>两级交换网络的每一对出入线连接需要通过两个交换单元和一条级间链路，增加了控制交换单元和搜寻空闲链路的难度</li><li>两级交换网络中，任何时候在一对交换器间只有一对出入线接通（即阻塞时回因交换链路的占用而无法，同一个交换单元的任何其他入线无法再与已经建立好连接的出线单元建立任何链接，因为两个交换单元链路只有一条）</li><li>级数越高，成本越高</li></ol><p><strong>优点</strong>：一般而言交换网络中的级数越高，建立链接的路径越多，阻塞的机会越少，链接能力越强。</p><h4 id="无阻塞的三种概念">无阻塞的三种概念</h4><ol type="1"><li>严格无阻塞网络：无论何时何种状态，任何时刻都可以在交换网络中建立一个连接，只要这个连接的起终点是空闲的</li><li>可重排无阻塞网络：无论何时何种状态，都可以在一个交换网络中直接或对已有的连接重选路由来建立一个连接，只要这个连接的起点和终点是空闲的</li><li>广义无阻塞网络：指一个给定的网络存在着固有的阻塞可能，但存在一种选路方法，使所有阻塞均可以避免</li></ol><h3 id="clos网络-1">CLOS网络</h3><p>三级的网络参数记为： <span class="math display">\[C(m,n,r)\]</span>其中m,n,r都是整数，他用来描述这样一种CLOS网络：两边各有r各对称的m*n矩形交换单元，中间是m个r*r个的方形交换单元</p><p><img data-src="../imgs/Drawing%202023-04-17%2020.56.22.excalidraw%201%201.png" /></p><p>目标：交叉点数随入、出线增长较慢的交换网络CLOS做到了什么：对于较大的N，能够设计一种无阻塞网络，其交点增长速度小于<spanclass="math display">\[ N^{\xi+1} (0&lt;\xi&lt;1) \]</span>也就是说，使用CLOS网络既可以减少交点数，又可以做到无阻塞</p><p>三级CLOS网络<strong>严格无阻塞</strong>条件：在最不利的情况下，中间级最多会出现<spanclass="math display">\[(n-1)\times2\]</span>阻塞，因此中间级至少满足有<span class="math display">\[m\ge2n-1\]</span>才是严格无阻塞。(最不利情况推导：输入侧目标交换单元除了最不利情况的目标输入线没被占用，其他的输入线均与不同的中间级交换单元链接，需要(n-1)个交换单元；输出侧目标交换单元除了最不利情况的目标输入出线没被占用，其他链路均被不同的交换单元占用，又需要(n-1)个交换单元；a与b进行交链接需要一个交换单元。固最差情况需要2n-1个交换单元)</p><p>三级CLOS网络<strong>可重排无阻塞</strong>条件：对于三级CLOS网络C(m,n,r),如果m&gt;=n，则该网络可重排无阻塞这种条件下通过交换单元对链路交换，总能解除阻塞状态</p><h3 id="tst网络">TST网络</h3><p>TST网络是在电路交换系统中经常使用的一种交换网络，它是三级交换网络，两侧为T接线器，中间一级为S接线器，S级的出入线数决定于两侧T接线器的数量。</p><table><thead><tr class="header"><th>类别</th><th>目的</th></tr></thead><tbody><tr class="odd"><td>第1级T接线器</td><td>负责输入母线的时隙交换</td></tr><tr class="even"><td>S接线器</td><td>负责母线之间的空间交换</td></tr><tr class="odd"><td>第2级T接线器</td><td>负责输出母线的时隙交换</td></tr></tbody></table><p><img data-src="../imgs/TST接线器.excalidraw%201.png" /></p><p>TST网络类型有两种，由T交换器控制方法决定： 1.第一个T交换器输入控制，第二个T交换器输出控制 2.第一个T交换器输出控制，第二个T交换器输入控制 S接线器是控制方式不限（输入控制指的是控制写入，顺序读出，输出控制指的是顺序写入，控制读出）</p><p>为简便控制，一般将两个方向的内部时隙设置为具有一定对应关系，一般相差半帧，又称为反相法。也可以采用奇偶控制。</p><p>TST网络以并行方式工作，所以串行数据进入前要进行串并变换。由于常用编码为PCM一次群编码，需要通过时分复用将其由串行转换为并行。目的：在高复用度情况下，不使码速过高，易于实现高速传输。</p><h3 id="dsn网络">DSN网络</h3><ul class="task-list"><li><input type="checkbox" />待定</li></ul><h3 id="banyan网络">BANYAN网络</h3><p>（banyan网络类似树形结构，每一级与前面一级的关系类似于二分选择。）一个banyan网络是由多个电子开关构成，这种电子开关具有两种状态：平行连接和交叉连接，这样的电子开关又被称为2X2交换单元。<img data-src="../imgs/Drawing%202023-04-18%2022.40.24.excalidraw%201.png" />2X2交换单元可以构成一个4X4的二级交换网络，每增加一级可以扩大交换网络。</p><h4 id="banyan网络特点">BANYAN网络特点</h4><ol type="1"><li>按规律可以用较小的BANYAN网络构成交大的BANYAN网络。</li><li>用两组N*N的网络，加上N个2*2 交换单元，构成 2N*2N 的网络。</li></ol><p><img data-src="../imgs/SmartSelect_20230418_223718_Edge.jpg" /></p><h4 id="出入线级数交换单元数的关系">出/入线、级数、交换单元数的关系</h4><p>N*N网络级数： <span class="math display">\[M=log^2N\]</span>N*N网络单元数：<span class="math display">\[(N/2) log^2N\]</span>BANYAN网络的任何一条入线与任何一条出线之间都有一条路径并且仅有一条路径，该网络具有唯一路径特性BANYAN网络不是CLOS网络，他不符合CLOS网络的无阻塞条件，当一个8X8BANYAN网络在特定情况下会同时选择相同的中间级交换单元，这个单元到达目标交换单元只有一条链路，于是发生内部阻塞。此时BANYAN网络不满足可重排无阻塞。这种内部阻塞会随着阵列级数的增加而增加。解决办法： 1.限制入线上的信息量或加大缓冲存储器。内部阻塞是在2X2交换单元的两条入线上要向该单元同一个出线发送信元时产生，在最坏的情况下，这个概率是1/2。2.通过增加多级交换网络的级数来消除内部阻塞。要温柔全消除内部阻塞，级数至少需要<spanclass="math display">\[2log_{2}N-1 \]</span> 3.增加BANYAN网络的平面数，构成多通道交换网络 4. 使用排序-BANYAN网络</p><h4 id="排序-banyan网络">排序-BANYAN网络</h4><p>只要BANYAN网络同时输入的全部数据块的出线地址单调排了，则不存在内部阻塞，因此在BANYAN网络前加入了排序网络。</p><h5 id="排序网络">排序网络</h5><p>一个N输入排序网络，也被称为N-排序器，即给定输入<spanclass="math display">\[I=\left \{ i_{0},i_{1},···,i_{N-1} \right \}\]</span> 形成输出<span class="math display">\[O=\left \{o_{0},o_{1},···,o_{N-1} \right \} ，且o_{0}\le o_{1}\le ···\leo_{N-1}\]</span>一种常见构成排序网络的开关是2-排序器，又称为2X2比较器，也称BATCHER比较器。由它构成的排序网络被称为BATCHER排序网络<img data-src="../imgs/Drawing%202023-04-19%2018.30.10.excalidraw%201.png" />（在整理排序网络原理的时候又折腾了一些相关的东西，这里是链接→<ahref="排序网络与双调排序.md">排序网络与双调排序</a>）排序网络与交换网络采用洗牌连接，构成8X8交换网络。排序-BANYAN网络消除了内部阻塞，但是不能消除出线阻塞，为此除了可以采用输入或输出缓冲排队的方法，还可以考虑在排序网络与BANYAN网络间构建反馈线，当出线标记相同的信元时，选择级别高的信元放行，另一个送回输入端重新排序。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;交换网络的基本概念&quot;&gt;交换网络的基本概念&lt;/h2&gt;
&lt;p&gt;交换系统的根本就是交换网络
&lt;strong&gt;交换&lt;/strong&gt;的最基本功能是在任意的入线与出线之间建立连接
构成交换网络的最小单位是&lt;strong&gt;交换单元&lt;/strong&gt;
交换网络由&lt;str</summary>
      
    
    
    
    <category term="通信" scheme="https://blog.honne13.com/categories/%E9%80%9A%E4%BF%A1/"/>
    
    
    <category term="交换网络" scheme="https://blog.honne13.com/tags/%E4%BA%A4%E6%8D%A2%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>vscode配置verilog环境</title>
    <link href="https://blog.honne13.com/posts/29040.html"/>
    <id>https://blog.honne13.com/posts/29040.html</id>
    <published>2023-04-01T04:58:20.000Z</published>
    <updated>2023-04-01T13:13:08.795Z</updated>
    
    <content type="html"><![CDATA[<h2 id="iverilog与ctags">iverilog与ctags：</h2><p>下载最新<ahref="https://bleyer.org/icarus/">iverilog</a>，安装时注意勾选AddPATH选项</p><p>下载最新<ahref="https://github.com/universal-ctags/ctags">ctags</a>，安装时注意勾选AddPATH选项</p><h2 id="vscode部分">vscode部分</h2><p>三个主要插件</p><figure><img data-src="https://s2.loli.net/2023/04/01/REAPQmlSZGH1xjW.png"alt="三个主要插件" /><figcaption aria-hidden="true">三个主要插件</figcaption></figure><h3id="verilog-hdlsystemverilogbluespec-systemverilog-没错这是一个插件名">Verilog-HDL/SystemVerilog/BluespecSystemVerilog （没错这是一个插件名）</h3><p>此插件用于调用Ctag与iverilog，提供语法支持，自动检错，智能补全，切换定义等基础功能。需要修改的设置：</p><p><img data-src="https://s2.loli.net/2023/04/01/JdH5ZIi3zwLTlXA.png" /></p><h3 id="verilog-hdl">Verilog HDL</h3><p>此插件提供了一个快捷编译按钮</p><h3 id="verilog-snippet">Verilog Snippet</h3><p>此插件提供了更好的补全（但也更臃肿）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;iverilog与ctags&quot;&gt;iverilog与ctags：&lt;/h2&gt;
&lt;p&gt;下载最新&lt;a
href=&quot;https://bleyer.org/icarus/&quot;&gt;iverilog&lt;/a&gt;，安装时注意勾选Add
PATH选项&lt;/p&gt;
&lt;p&gt;下载最新&lt;a
h</summary>
      
    
    
    
    <category term="电子" scheme="https://blog.honne13.com/categories/%E7%94%B5%E5%AD%90/"/>
    
    
    <category term="Verilog" scheme="https://blog.honne13.com/tags/Verilog/"/>
    
  </entry>
  
</feed>
